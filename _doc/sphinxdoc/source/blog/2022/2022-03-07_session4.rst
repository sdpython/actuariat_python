
.. blogpost::
    :title: Année 2022, séance 4
    :keywords: python
    :date: 2022-03-07
    :categories: plan

    Séance découpée en trois parties.

    **Partie I**

    * Exercice : Comment utiliser
      `GridSearch
      <https://scikit-learn.org/stable/modules/
      generated/sklearn.model_selection.GridSearchCV.html>`_,
      un modèle customisé
      pour faire de la sélection de variables ?
    * `géolocalisation <https://www.cnil.fr/fr/definition/geolocalisation>`_
    * `geopandas <https://geopandas.org/en/stable/>`_
    * tracer une carte,
      `shapely <https://shapely.readthedocs.io/en/stable/manual.html>`_,
      `folium <https://python-visualization.github.io/folium/>`_
    * système de coordonnées

    **Partie II : réseaux de neurones et transfer learning**

    * machine learning et
      `deep learning <https://fr.wikipedia.org/wiki/Apprentissage_profond>`_
    * réseau de neurones profond, `pytorch <https://pytorch.org/>`_
    * `onnx <https://onnx.ai/>`_,
      `onnxruntime <https://onnxruntime.ai/>`_
    * utilisation de modèles de deep learning avec scikit-learn

    **Partie III : éléments techniques**

    * CPU, GPU
    * double, float
    * dense, sparse
    * json, xml, yml
    * encoding
    * graphes, graphes sociaux, communautés

    **Exercice**

    On veut créer une classe d'arbre de décision qui fonctionne
    comme un arbre de décision mais génère une erreur si la distribution
    des feuilles prédites s'éloigne de celle observée durant
    l'apprentissage.
