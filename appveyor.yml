image:
  - Visual Studio 2019
environment:
  matrix:
    - PYTHON: "C:\\Python39-x64"
      PYTHON_VERSION: "3.9.x"
      PYTHON_ARCH: "64"
init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  - "%PYTHON%\\python -m pip install --upgrade pip"
  # for many packages
  - "%PYTHON%\\Scripts\\pip install -r requirements-win.txt"
  # install precompiled versions not available on pypi
  - "%PYTHON%\\Scripts\\pymy_install3 llvmlite numba shapely pyproj fiona gdal"
  - "%PYTHON%\\Scripts\\pymy_install3 Cartopy"
  # onnx
  #- git clone -b master --single-branch https://github.com/onnx/onnx.git --recursive
  #- cd onnx
  #- set ONNX_ML=1
  #- set ONNX_BUILD_TESTS=1
  #- set ONNXIFI_DUMMY_BACKEND=1
  #- python setup.py bdist_wheel
  #- dir dist
  #- python setup.py install
  #- cd ..
  # other dependencies
  - "%PYTHON%\\Scripts\\pip install -r requirements.txt --no-deps"
  - set PYTHONPATH=src

build: off

test_script:
  # The job is cut after an hour. Only a subset of unit test is run.
  - "%PYTHON%\\python -u setup.py unittests -d 20 -g \".*((LONG)|(SKIP)|(session9)).*\""

after_test:
  - "%PYTHON%\\python -u setup.py bdist_wheel"

artifacts:
  - path: dist
    name: ensae_teaching_cs

cache:
  # Use the appveyor cache to avoid re-downloading large archives such
  # the MKL numpy and scipy wheels mirrored on a rackspace cloud
  # container, speed up the appveyor jobs and reduce bandwidth.
  # Tips taken from scikit-learn.
  - '%APPDATA%\pip\Cache'
